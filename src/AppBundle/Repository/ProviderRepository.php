<?php

namespace AppBundle\Repository;
/**
 * ProviderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProviderRepository extends \Doctrine\ORM\EntityRepository
{

    public function myFindBy($id)
    {

        $qb = $this->createQueryBuilder('p');

        $qb->leftJoin('p.services', 's')
            ->andWhere('s.id like :id')
            ->andWhere('p.banned=:bool')->setParameter('bool', false)
            ->setParameter('id', $id);


        return $qb
            ->getQuery()
            ->getResult();
    }


    public function search($params)
    {

        $qb = $this->createQueryBuilder('u');

        $qb
            ->leftJoin('u.locality', 'l')->addSelect('l')
            ->innerJoin('u.services', 'c')->addSelect('c')
            ->leftJoin('c.image', 'i')->addSelect('i');

        if ($params['by_name'] != null) {
            $qb->andWhere('u.name LIKE :name')
                ->setParameter('name', '%' . $params['by_name'] . '%')
                ->andWhere('u.banned=:bool')->setParameter('bool', false);

        }


        if ($params['by_location'] != null) {
            $qb->andwhere('l.locality LIKE :locality')
                ->setParameter('locality', '%' . $params['by_location'] . '%');
        }

        if ($params['by_service'] != null) {

            $qb->andWhere('c.name LIKE :service')
                ->setParameter('service', '%' . $params['by_service'] . '%');

        }

        return $qb->getQuery()
            ->getResult();
    }


    public function findProvidersWithLogo()
    {

        $qb = $this->createQueryBuilder('p')
            ->andWhere('p.banned=:bool')->setParameter('bool', false)
            ->orderBy('p.registrationDate', 'DESC')
            ->leftJoin('p.logo', 'l')->addSelect('l')
            ->leftJoin('p.locality', 'lo')->addSelect('lo')
            ->setMaxResults(8);


        return $qb->getQuery()
            ->getResult();
    }

    public function findAllProvidersWithLogo()
    {

        $qb = $this->createQueryBuilder('p')
            ->orderBy('p.registrationDate', 'DESC')
            ->leftJoin('p.logo', 'l')->addSelect('l')
            ->leftJoin('p.locality', 'lo')->addSelect('lo');


        return $qb->getQuery()
            ->getResult();
    }

    public function findProvidersWithHighlightedServices(){

        $qb = $this->createQueryBuilder('p')
            ->innerJoin('p.services', 's')->addSelect('s')
            ->Where('s.highlight = true');


            return $qb->getQuery()
                ->getResult();

    }


}
