<?php

namespace AppBundle\Repository;

/**
 * PromotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends \Doctrine\ORM\EntityRepository
{

    public function promoWithProvider($slug)
    {

        $qb = $this->createQueryBuilder('promo');

        $qb
            ->leftJoin('promo.provider', 'prov')->addSelect('prov')
            ->andWhere('prov.banned=:bool')->setParameter('bool', false)
            ->leftJoin('promo.service', 's')->addSelect('s')
            ->andWhere('promo.name LIKE :slug')
            ->setParameter('slug', $slug);


        return $qb
            ->getQuery()
            ->getSingleResult();

    }


    public function findPromoByProvider($slug){

        $qb = $this->createQueryBuilder('promo');

        $qb->leftJoin('promo.provider', 'prov')
            ->andWhere('prov.slug like :slug')
            ->setParameter('slug', $slug);

        return $qb
            ->getQuery()
            ->getResult();
    }

    public function findPromoWithProvidersNotBanned(){

        $qb = $this->createQueryBuilder('promo');

        $qb
            ->leftJoin('promo.provider', 'prov')->addSelect('prov')
            ->andWhere('prov.banned=:bool')->setParameter('bool', false)
            ->andWhere('promo.displayFrom <= CURRENT_DATE()')
            // et dont la date de début d'affichage est inférieure ou égale à ajd
            ->andWhere('promo.displayTo >= CURRENT_DATE()' )
            // et dont la date de fin d'affichage est supérieure ou égale à ajd
        ;

        return $qb
            ->getQuery()
            ->getResult();

    }

}
